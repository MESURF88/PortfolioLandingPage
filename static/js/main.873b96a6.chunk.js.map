{"version":3,"sources":["images/fullimg_orig.jpg","images/sideimg.jpg","components/sidebar.jsx","components/introduction.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","href","className","data-toggle","data-target","aria-expanded","aria-controls","id","style","backgroundImage","AuthorImg","role","data-nav-section","target","rel","aria-hidden","Component","Introduction","data-section","ProfileImg","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oHAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,qC,6MCKtBC,E,uKAEjB,OACE,6BACE,6BACE,yBAAKC,KAAK,UAAUC,UAAU,6CAA6CC,cAAY,WAAWC,cAAY,UAAUC,gBAAc,QAAQC,gBAAc,UAAS,6BACrK,2BAAOC,GAAG,iBAAiBL,UAAU,wBACnC,yBAAKA,UAAU,eAEb,yBAAKA,UAAU,aAAaM,MAAO,CAACC,gBAAgB,OAAD,OAASC,IAAT,QACnD,wBAAIH,GAAG,iBAAgB,uBAAGN,KAAK,cAAR,eACvB,0BAAMC,UAAU,SAAQ,uBAAGA,UAAU,cAArC,8BAEF,yBAAKK,GAAG,qBAAqBI,KAAK,aAAaT,UAAU,UACvD,yBAAKK,GAAG,SAASL,UAAU,YACzB,4BACE,wBAAIA,UAAU,UAAS,uBAAGD,KAAK,QAAQW,mBAAiB,QAAjC,iBACvB,4BAAI,uBAAGX,KAAK,SAASW,mBAAiB,SAAlC,UACJ,4BAAI,uBAAGX,KAAK,YAAYW,mBAAiB,YAArC,aACJ,4BAAI,uBAAGX,KAAK,YAAYW,mBAAiB,YAArC,gBAIV,yBAAKL,GAAG,sBACN,4BACE,4BAAI,uBAAGN,KAAK,2CAA2CY,OAAO,SAASC,IAAI,uBAAsB,uBAAGZ,UAAU,qBAC9G,4BAAI,uBAAGD,KAAK,8BAA8BY,OAAO,SAASC,IAAI,uBAAsB,uBAAGZ,UAAU,oBAGrG,yBAAKA,UAAU,mBACb,2BAAG,4CACW,uBAAGA,UAAU,cAAca,cAAY,SADlD,IAC4D,6BAD5D,UAEQ,uBAAGd,KAAK,uBAAuBY,OAAO,SAASC,IAAI,uBAAnD,YAFR,6B,GA9BoBE,a,gBCDhBC,E,uKAEjB,OACE,6BACC,6BAASV,GAAG,gBAAgBL,UAAU,gBAAgBgB,eAAa,QAChE,yBAAKhB,UAAU,4BACb,wBAAIA,UAAU,UACd,wBAAIM,MAAO,CAACC,gBAAgB,OAAD,OAASU,IAAT,OACzB,yBAAKjB,UAAU,YACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wFACb,yBAAKA,UAAU,mCACb,yBAAKA,UAAU,QACb,mCAAQ,6BAAR,aACA,2BAAG,uBAAGA,UAAU,4BAA4BD,KAAK,IAAIY,OAAO,SAASC,IAAI,uBAAtE,UAAmG,uBAAGZ,UAAU,mC,GAfnGc,aCkB3BI,E,uKAZX,OACE,yBAAKb,GAAG,iBACN,yBAAKA,GAAG,kBACN,kBAAC,EAAD,MACE,yBAAKA,GAAG,iBACN,kBAAC,EAAD,a,GAPIS,aCIEK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.873b96a6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fullimg_orig.8fcc0832.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sideimg.73fdd601.jpg\";","import React, { Component } from 'react'\r\n\r\nimport AuthorImg from '../images/fullimg_orig.jpg'\r\n\r\n\r\nexport default class Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <nav href=\"#navbar\" className=\"js-colorlib-nav-toggle colorlib-nav-toggle\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\"><i /></nav>\r\n          <aside id=\"colorlib-aside\" className=\"border js-fullheight\">\r\n            <div className=\"text-center\">\r\n\r\n              <div className=\"author-img\" style={{backgroundImage: `url(${AuthorImg})`}} />\r\n              <h1 id=\"colorlib-logo\"><a href=\"index.html\">Kevin Hill</a></h1>\r\n              <span className=\"email\"><i className=\"icon-mail\"></i> hill.kevin2222@gmail.com</span>\r\n            </div>\r\n            <nav id=\"colorlib-main-menu\" role=\"navigation\" className=\"navbar\">\r\n              <div id=\"navbar\" className=\"collapse\">\r\n                <ul>\r\n                  <li className=\"active\"><a href=\"#home\" data-nav-section=\"home\">Introduction</a></li>\r\n                  <li><a href=\"#about\" data-nav-section=\"about\">About</a></li>\r\n                  <li><a href=\"#projects\" data-nav-section=\"projects\">Projects</a></li>\r\n                  <li><a href=\"#timeline\" data-nav-section=\"timeline\">Timeline</a></li>\r\n                </ul>\r\n              </div>\r\n            </nav>\r\n            <nav id=\"colorlib-main-menu\">\r\n              <ul>\r\n                <li><a href=\"https://www.linkedin.com/in/kevinhill88/\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"icon-linkedin2\" /></a></li>\r\n                <li><a href=\"https://github.com/MESURF88\" target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"icon-github\"></i></a></li>\r\n              </ul>\r\n            </nav>\r\n            <div className=\"colorlib-footer\">\r\n              <p><small>\r\n                  Made with <i className=\"icon-coffee\" aria-hidden=\"true\" /> <br></br>\r\n                  Thanks <a href=\"https://colorlib.com\" target=\"_blank\" rel=\"noopener noreferrer\">Colorlib</a> for inspiration \r\n              </small></p>\r\n\r\n            </div>\r\n          </aside>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport ProfileImg from '../images/sideimg.jpg'\r\n\r\nexport default class Introduction extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n       <section id=\"colorlib-hero\" className=\"js-fullheight\" data-section=\"home\">\r\n          <div className=\"flexslider js-fullheight\">\r\n            <ul className=\"slides\">\r\n            <li style={{backgroundImage: `url(${ProfileImg})`}}>\r\n              <div className=\"overlay\" />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 col-sm-12 col-xs-12 js-fullheight slider-text\">\r\n                      <div className=\"slider-text-inner js-fullheight\">\r\n                        <div className=\"desc\">\r\n                          <h1>Hi! <br />I'm Kevin</h1>\r\n                          <p><a className=\"btn btn-primary btn-learn\" href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">View CV<i className=\"icon-download4\" /></a></p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </div>\r\n\r\n     )\r\n    }\r\n  }     ","import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar'\nimport Introduction from './components/introduction'\n//import About from './components/about'\n//import About from './components/projects'\n//import About from './components/timeline'\n\nclass App extends Component {\n  render(){\n    return (\n      <div id=\"colorlib-page\">\n        <div id=\"container-wrap\"> \n          <Sidebar></Sidebar>\n            <div id=\"colorlib-main\">\n              <Introduction></Introduction>\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}